name: SonarCloud
on:
  push:
    branches: [ "feature/ci_stm_pio" ]
  pull_request:
    branches: [ "feature/ci_stm_pio" ]
jobs:
  build:
    name: build PlatformIO
    runs-on: ${{ matrix.os }}
    
    env:
      # Speichere den Pfad als Umgebungsvariable
      PROGRAM_PATH: ${{ github.workspace }}/src/ioc/master/
      
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - shell: sh
        run: ls
      - shell: sh
        run: cd src
      - shell: sh
        run: ls  
      - name: Run build
        run: |
         cd ${{ github.workspace }}/src/ioc/master/
         pio run
        
  check:
    name: run static code analysis cppcheck
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Run Code Analyse CppCheck
        run: |
         cd ${{ github.workspace }}/src/ioc/master/ 
         pio check

  build_and_check_ubuntu_sonar:
    name: build plattformio and run static code analysis on sonarcloud.io   
    runs-on: ubuntu-latest
    env:
      BUILD_WRAPPER_OUT_DIR: build_wrapper_output_directory # Directory where build-wrapper output will be placed
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Install PlatformIO
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade platformio
      - name: Set up JDK 17
        uses: actions/setup-java@v4.2.2
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install sonar-scanner and build-wrapper
        uses: SonarSource/sonarcloud-github-c-cpp@v3
      
      - name: Set program path
        run: echo "PROGRAM_PATH=${{ github.workspace }}/src/ioc/master" >> $GITHUB_ENV
      - name: Run build-wrapper
        run: |
          cd $PROGRAM_PATH
          build-wrapper-linux-x86-64 
          #--out-dir ${{ env.BUILD_WRAPPER_OUT_DIR }} \
          #pio run
      - name: List files in output directory
        run: ls -R
      - name: Run sonar-scanner
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          sonar-scanner \
            --define sonar.cfamily.compile-commands="${{ env.BUILD_WRAPPER_OUT_DIR }}/compile_commands.json" \
            --define sonar.projectKey=gitromrein_dina_zmve \
            --define sonar.organization=gitromrein
      - name: List files in output directory 2
        run: ls -R
